# CMake package configuration file for SofaFramework

@PACKAGE_INIT@

# CMake policies
if(POLICY CMP0072)
    cmake_policy(SET CMP0072 NEW) # Use  GLVND libraries for OpenGL and GLX when available
endif()

get_filename_component(SOFA_ROOT "${CMAKE_CURRENT_LIST_DIR}/../../.." ABSOLUTE)

# Add CMAKE_CURRENT_LIST_DIR to CMAKE_MODULE_PATH (if not already done)
# Needed by: include(SofaMacros)
list(FIND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}" HAS_SOFAFRAMEWORK_CMAKE_MODULE_PATH)
if(HAS_SOFAFRAMEWORK_CMAKE_MODULE_PATH EQUAL -1)
    list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
endif()

list(FIND CMAKE_PREFIX_PATH "${SOFA_ROOT}/plugins" HAS_PLUGINS_CMAKE_PREFIX_PATH)
if(HAS_PLUGINS_CMAKE_PREFIX_PATH EQUAL -1)
    list(APPEND CMAKE_PREFIX_PATH "${CMAKE_CURRENT_LIST_DIR}/../../../plugins")
endif()

list(APPEND CMAKE_INCLUDE_PATH "${SOFA_ROOT}/include/extlibs/WinDepPack")
list(APPEND CMAKE_MODULE_PATH "${SOFA_ROOT}/cmake/Modules")

include(SofaMacros)

set(SOFAHELPER_HAVE_BOOST "@SOFAHELPER_HAVE_BOOST@")
set(SOFAHELPER_HAVE_BOOST_SYSTEM "@SOFAHELPER_HAVE_BOOST_SYSTEM@")
set(SOFAHELPER_HAVE_BOOST_FILESYSTEM "@SOFAHELPER_HAVE_BOOST_FILESYSTEM@")
set(SOFAHELPER_HAVE_BOOST_PROGRAM_OPTIONS "@SOFAHELPER_HAVE_BOOST_PROGRAM_OPTIONS@")
set(SOFAHELPER_HAVE_BOOST_THREAD "@SOFAHELPER_HAVE_BOOST_THREAD@")
set(SOFAHELPER_HAVE_OPENGL "@SOFAHELPER_HAVE_OPENGL@")
set(SOFAHELPER_HAVE_GLEW "@SOFAHELPER_HAVE_GLEW@")
set(SOFAHELPER_HAVE_GTEST "@SOFAHELPER_HAVE_GTEST@")

set(SOFA_NO_OPENGL "@SOFA_NO_OPENGL@")
set(SOFA_USE_MASK "@SOFA_USE_MASK@")

set(SOFA_WITH_DEVTOOLS "@SOFA_WITH_DEVTOOLS@")
set(SOFA_WITH_THREADING "@SOFA_WITH_THREADING@")
set(SOFA_WITH_DEPRECATED_COMPONENTS "@SOFA_WITH_DEPRECATED_COMPONENTS@")

# Find dependencies
find_package(Boost QUIET REQUIRED system filesystem program_options)
if(SOFAHELPER_HAVE_BOOST_THREAD)
    find_package(Boost QUIET REQUIRED thread)
endif()
if(SOFAHELPER_HAVE_OPENGL)
    find_package(OpenGL QUIET REQUIRED)
endif()
if(SOFAHELPER_HAVE_GLEW)
    find_package(GLEW QUIET REQUIRED)
endif()
if(SOFAHELPER_HAVE_GTEST)
    find_package(GTest CONFIG QUIET REQUIRED)
endif()

# Eigen3 is required by SofaDefaultType and SofaHelper
find_package(Eigen3 QUIET REQUIRED)

foreach(target SofaHelper SofaDefaultType SofaCore)
    if(NOT TARGET ${target})
        include("${CMAKE_CURRENT_LIST_DIR}/SofaFrameworkTargets.cmake")
        break()
    endif()
endforeach()

check_required_components(SofaHelper SofaDefaultType SofaCore)
